CREATE TABLE COOKBOOK(
	COOKBOOK_ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	TITLE VARCHAR(50) NOT NULL
);

--ALTER TABLE COOKBOOK  ADD PRIMARY KEY (COOKBOOK_ID) ;

CREATE TABLE AUTHOR(
	AUTHOR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	FIRST_NAME VARCHAR(20) NOT NULL,
	LAST_NAME VARCHAR(20) NOT NULL
);

--ALTER TABLE AUTHOR ADD PRIMARY KEY (AUTHOR_ID);

CREATE TABLE COOKBOOK_AUTHOR(
	COOKBOOK_AUTHOR_ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	COOKBOOK_ID INTEGER NOT NULL,
	AUTHOR_ID INTEGER NOT NULL
);

--ALTER TABLE COOKBOOK_AUTHOR ADD PRIMARY KEY (COOKBOOK_AUTHOR_ID);

ALTER TABLE COOKBOOK_AUTHOR 
ADD FOREIGN KEY (COOKBOOK_ID) REFERENCES COOKBOOK(COOKBOOK_ID);

ALTER TABLE COOKBOOK_AUTHOR 
ADD FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR(AUTHOR_ID);

CREATE TABLE RECIPE(
	RECIPE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	NAME VARCHAR(50) NOT NULL,
	PAGE INTEGER NOT NULL,
	COOKBOOK_ID INTEGER NOT NULL,
	RATING INTEGER
);

--ALTER TABLE RECIPE ADD PRIMARY KEY (RECIPE_ID);

ALTER TABLE RECIPE 
ADD FOREIGN KEY (COOKBOOK_ID) REFERENCES COOKBOOK(COOKBOOK_ID);

CREATE TABLE COMMENT(
	COMMENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	COMMENT VARCHAR(500) NOT NULL,
	USER VARCHAR(20) NOT NULL,
	COMMENT_DATE TIMESTAMP NOT NULL,
	RECIPE_ID INTEGER NOT NULL
);

--ALTER TABLE COMMENT ADD PRIMARY KEY (COMMENT_ID);

ALTER TABLE COMMENT
ADD FOREIGN KEY (RECIPE_ID) REFERENCES RECIPE(RECIPE_ID);

CREATE TABLE TAG(
	TAG_NAME VARCHAR(20) NOT NULL
);

ALTER TABLE TAG ADD PRIMARY KEY (TAG_NAME);

CREATE TABLE RECIPE_TAG(
	RECIPE_TAG_ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
	RECIPE_ID INTEGER NOT NULL,
	TAG_NAME VARCHAR(20) NOT NULL
);

--ALTER TABLE RECIPE_TAG ADD PRIMARY KEY (RECIPE_TAG_ID);

ALTER TABLE RECIPE_TAG 
ADD FOREIGN KEY (RECIPE_ID) REFERENCES RECIPE(RECIPE_ID);

ALTER TABLE RECIPE_TAG 
ADD FOREIGN KEY (TAG_NAME) REFERENCES TAG(TAG_NAME);



